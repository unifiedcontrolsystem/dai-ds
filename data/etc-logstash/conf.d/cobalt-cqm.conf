input {
    file {
        path => "/var/log/cqm.log"
        # This sets the type of these records, used to narrow the scope in the following filters.
        type => "cqm"
        # For files that are new and have NOT been seen before, says to start reading from beginning of file.
        start_position => "beginning"
    }
}


filter {
     grok {
         match => { "message" => [ "(?<before>[^;]*);%{DATA:capture};%{GREEDYDATA:rest}"] }
     }

}

output {
     # Send all our cqm events that did NOT match our grok pattern to null output
     if "_grokparsefailure" in [tags] {
         file {
                                 codec => line { format => "ERROR PARSING" }
                                 path => "/tmp/cobalt.log"
                             }
     }
     else {

        file {
             codec => line { format => "cqm BE%{before};CA%{capture};RE%{rest}" }
             path => "/tmp/cobalt.log"
         }
         if ([capture] == "S") or
            ([capture] == "E")
         {
             rabbitmq {
                 id => "cqm"
                 host => "loki-n1"
                 exchange => "cobalt"
                 exchange_type => "topic"
                 durable => false
                 key => "InputFromLogstashForAdapterWlm"
                 codec => line { format => "cqm %{before};%{capture};%{rest}" }
             }
         }
     }
}
