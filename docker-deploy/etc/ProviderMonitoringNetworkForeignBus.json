{
  "providerClassMap": {
    "environmentalData": "com.intel.dai.monitoring.DemoEnvironmentalProviderForeignBus",
    "rasData": "com.intel.dai.monitoring.DemoEventProviderForeignBus"
  },

  "networkStreams": {
    "demoTelemetry": {
      "arguments": {
        "connectPort": 8080,
        "connectAddress": "10.25.24.156",
        "urlPath": "/v1/stream/cray-node",
        "connectTimeout": "30",
        "requestBuilder": "com.intel.dai.monitoring.SSEStreamRequestBuilder",
        "requestType": "GET",
        "use-ssl": true,
        "requestBuilderSelectors": {
          "stream_id": "demoTelemetry"
        }
      },
      "name": "sse"
    },
    "demoEvents": {
      "arguments": {
        "connectPort": 8080,
        "connectAddress": "10.25.24.156",
        "urlPath": "/v1/stream/cray-logs-containers",
        "connectTimeout": "30",
        "requestBuilder": "com.intel.dai.monitoring.SSEStreamRequestBuilder",
        "requestType": "GET",
        "use-ssl": true,
        "requestBuilderSelectors": {
          "stream_id": "demoEvents"
        }
      },
      "name": "sse"
    }
  },

  "adapterProfiles": {
    "environmental": {
      "networkStreamsRef": [
        "demoTelemetry"
      ],
      "subjects": [
        "telemetry"
      ],
      "adapterProvider": "environmentalData"
    },
    "ras_events": {
      "networkStreamsRef": [
        "demoEvents"
      ],
      "subjects": [
        "events"
      ],
      "adapterProvider": "rasData"
    }
  },

  "providerConfigurations": {
    "com.intel.dai.network_listener.NetworkListenerSystemActions": {
      "sourceType": "rabbitmq",
      "exchangeName": "ucs",
      "uri": "amqp://127.0.0.1"
    },
    "com.intel.dai.monitoring.DemoEnvironmentalProviderForeignBus": {
      "publishRawTopic": "ucs_raw_data",
      "publishAggregatedTopic": "ucs_aggregated_data",
      "publish": true
    },
    "com.intel.dai.monitoring.DemoEventProviderForeignBus": {
      "publishTopic": "ucs_ras_event",
      "publish": true
    }
  },

  "subjectMap": {
    "telemetry": "EnvironmentalData",
    "inventoryChanges": "InventoryChangeEvent",
    "logs": "LogData",
    "events": "RasEvent",
    "stateChanges": "StateChangeEvent"
  }
}