package com.intel.dai.resource_managers.cobalt


import com.intel.logging.Logger;
import com.intel.dai.dsapi.*;
import com.intel.dai.AdapterInformation;
import spock.lang.Specification

class AdapterWlmCobaltSpec extends Specification {

    def underTest_
    def setup() {

        def log_ = Mock(Logger)
        def jobs_ = Mock(Jobs)
        jobs_.startJobInternal(_,_) >> new HashMap<String,Object>() {{ put("WlmJobStarted","T"); put("WlmJobCompleted","F")}}
        jobs_.completeJobInternal(_,_) >> new HashMap<String,Object>() {{ put("WlmJobStarted","T"); put("WlmJobCompleted","T")}}
        def reservations_ = Mock(Reservations)
        def eventlog_ = Mock(EventsLog)
        def raseventlog_ = Mock(RasEventLog)
        def workQueue_ = Mock(WorkQueue)
        def nodeinfo_ = Mock(NodeInformation)
        nodeinfo_.getComputeNodeLocationFromHostnameMap() >> new HashMap<String,String>() {{ put("hostname", "location") }}
        nodeinfo_.getComputeNodeSequenceNumberFromLocationMap() >> new HashMap<String,Long>() {{ put("location", new Long(300l)) }}
        def factory = Mock(DataStoreFactory)
        factory.createJobApi() >> jobs_
        factory.createReservationApi() >> reservations_
        factory.createEventsLog(_,_) >> eventlog_
        factory.createRasEventLog(_) >> raseventlog_
        factory.createWorkQueue(_) >> workQueue_
        factory.createNodeInformation() >> nodeinfo_
        def adapter_ = new AdapterInformation("WLM", AdapterWlmCobalt.class.getSimpleName(), "location", "localhost", -1L)

        underTest_ = new AdapterWlmCobalt(log_, adapter_, factory)
    }

    def "Test handleCobaltJobMessages JobStarted"() {
        def jobStarted = "cqm 2019-04-03 00:32:17 04/03/2019 00:32:17;S;327220;Resource_List.ncpus=3000 Resource_List.nodect=3000 Resource_List.walltime=1:00:00 account=^P27857609013029^ args= ctime=1554251516.32 cwd=/lus/theta-fs0/projects/^P76243759028727^/^FILEPATHREMOVED^^U73007516364104^/^FILEPATHREMOVED^ etime=1554251516.32 exe=/home/^U73007516364104^/^FILEPATHREMOVED^ exec_host=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" group=^U47439912589006^ jobname=nek mode=script qtime=1554251516.32 queue=R.pm2 session=^U47439912589006^ start=1554251537.81 user=^U73007516364104^"
        def aLineCols = jobStarted.split(" ")
        underTest_.handleCobaltJobMessages(jobStarted, aLineCols)
        expect: true
    }

    def "Test handleCobaltJobMessages JobCompletion"() {
        def jobCompleted = "cqm 2019-04-03 00:35:40 04/03/2019 00:35:40;E;327220;Exit_status=0 Resource_List.ncpus=3000 Resource_List.nodect=3000 Resource_List.walltime=1:00:00 account=^P27857609013029^ approx_total_etime=20 args= ctime=1554251516.32 cwd=/lus/theta-fs0/projects/^P76243759028727^/^FILEPATHREMOVED^^U73007516364104^/^FILEPATHREMOVED^ end=1554251740.88 etime=1554251516.32 exe=/home/^U73007516364104^/^FILEPATHREMOVED^ exec_host=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" group=^U47439912589006^ jobname=nek mode=script priority_core_hours=2824063 qtime=1554251516.32 queue=R.pm2 resources_used.location=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" resources_used.nodect=3000 resources_used.walltime=0:03:23 session=^U47439912589006^ start=1554251537.81 user=^U73007516364104^"
        def aLineCols = jobCompleted.split(" ")
        underTest_.handleCobaltJobMessages(jobCompleted, aLineCols)
        expect: true
    }

    def "Test handleCobaltReservationMessages ReservationCreated"() {
        def reservationCreated = "bgsched 2019-04-07 15:27:54 ^U94332985204799^ adding reservation: [{'name': 'benchmarking', 'block_passthrough': False, 'partitions': '24-47,52-75,84-139,148-286,288-395,404-459,468-523,532-779,788-815,820-843,852-907,916-1161,1163,1172-1227,1236-1291,1300-1521,1523-1547,1556-1611,1620-1675,1684-1935,1940-1995,2004-2059,2068-2319,2324-2351,2356-2379,2388-2443,2452-2703,2708-2763,2772-2827,2836-2983,2985-3087,3092-3119,3124-3147,3156-3211,3220-3547,3549,3560-3590,3594-3597,3612-3614,3619-3633,3640-3650,3652-3659,3662,3664-3665,3668-3689,3692-3694,3696-3699,3701,3710,3720-3764,3766-3779,3781-3782,3784,3787-3792,3794-3796,3798,3800-3814,3816-3823,3842,3846,3849,3860-3862,3864-3893,3895-3919,3930-3942,3944-3959,3961,3970-3971,3973,3976-3991,3993-3996,3998-4009,4014,4020-4053,4055-4056,4059-4064,4066,4068-4070,4076,4080-4090,4106-4140,4150-4181,4183-4191,4196-4199,4201,4210-4212,4214,4216-4223,4226,4229-4244,4246-4260,4262-4272,4276-4277,4280-4288,4290-4299,4302-4303,4306,4308-4327,4329-4335,4338,4340-4349,4351-4363,4366-4368,4370,4372-4376,4379-4400,4404-4406,4408-4409,4413,4416,4418-4419,4421,4424,4426,4428-4436,4438-4442,4445-4449,4454-4458,4460-4475,4477,4479,4487,4491,4495-4496,4498-4549,4551-4567,4569-4573,4576,4578-4579,4584-4607', 'project': ^P54486199121217^, 'start': 1554667200.0, 'duration': 12600, 'cycle': ^P54486199121217^, 'users': '^U92605928607567^:^U94332985204799^:^U76403053512984^:^U46918047287928^'}]"
        def aLineCols = reservationCreated.split(" ")
        underTest_.handleCobaltReservationMessages(reservationCreated, aLineCols)
        expect: true
    }

    def "Test handleCobaltReservationMessages ReservationUpdated Users"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'users': '^U92605928607567^:^U94332985204799^:^U76403053512984^:^U46918047287928^:^U88988976361690^:^U833649142102^'}"
        def aLineCols = reservationUpdated.split(" ")
        underTest_.handleCobaltReservationMessages(reservationUpdated, aLineCols)
        expect: true
    }

    def "Test handleCobaltReservationMessages ReservationUpdated Nodes"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'partitions': '24-47'}"
        def aLineCols = reservationUpdated.split(" ")
        underTest_.handleCobaltReservationMessages(reservationUpdated, aLineCols)
        expect: true
    }

    def "Test handleCobaltReservationMessages ReservationUpdated Start"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'start': '1554667200.0'}"
        def aLineCols = reservationUpdated.split(" ")
        underTest_.handleCobaltReservationMessages(reservationUpdated, aLineCols)
        expect: true
    }

    def "Test handleCobaltReservationMessages ReservationDeleted"() {
        def reservationDeleted = "bgsched 2019-04-07 21:40:35 ^U94332985204799^ releasing reservation: [{'name': 'benchmarking', 'partitions': '*'}]"
        def aLineCols = reservationDeleted.split(" ")
        underTest_.handleCobaltReservationMessages(reservationDeleted, aLineCols)
        expect: true
    }

    def "Test waitUntilFinishedProcessingMessages"() {
        underTest_.shutDown()
        underTest_.waitUntilFinishedProcessingMessages()
        expect: true
    }

    def "Test getBitSetOfCobaltNodes"() {
        Date   dLineTimestamp    = underTest_.oldDateFormat.parse("2019-04-03 00:35:40");
        BitSet bsNodes = new BitSet(12800)
        bsNodes.set(300)

        expect: underTest_.getBitSetOfCobaltNodes("hostname", "327220", dLineTimestamp, true) == bsNodes;
    }

    def "Test getBitSetOfCobaltNodes No Register"() {
        Date   dLineTimestamp    = underTest_.oldDateFormat.parse("2019-04-03 00:35:40");
        BitSet bsNodes = new BitSet(12800)
        bsNodes.set(300)

        expect: underTest_.getBitSetOfCobaltNodes("hostname", "327220", dLineTimestamp, false) == bsNodes;
    }

    def "Test getBitSetOfCobaltNodes No Seq"() {
        Date   dLineTimestamp    = underTest_.oldDateFormat.parse("2019-04-03 00:35:40");
        BitSet bsNodes = new BitSet(12800)
        def nodeinfo_ = Mock(NodeInformation)
        nodeinfo_.getComputeNodeLocationFromHostnameMap() >> new HashMap<String,String>() {{ put("hostname", "location") }}
        nodeinfo_.getComputeNodeSequenceNumberFromLocationMap() >> new HashMap<String,Long>() {{ put("location2", new Long(300l)) }}
        underTest_.nodeinfo = nodeinfo_

        expect: underTest_.getBitSetOfCobaltNodes("hostname", "327220", dLineTimestamp, false) == bsNodes;
    }

    def "Test assocJobIdAndNodeInCachedJobsTable"() {
        Date   dLineTimestamp    = underTest_.oldDateFormat.parse("2019-04-03 00:35:40");
        String sNodeList = "location"
        ArrayList<String> alNodes = new ArrayList<String>(Arrays.asList(sNodeList.replaceAll("\"","").split(",")));
        ArrayList<String> alNodeLctns = new ArrayList<String>(alNodes.size());
        String[] aTempNodeLctns = new String[alNodeLctns.size()];
        aTempNodeLctns = alNodeLctns.toArray(aTempNodeLctns);
        underTest_.assocJobIdAndNodeInCachedJobsTable("327220", dLineTimestamp.getTime() * 1000L, aTempNodeLctns)
        expect: true
    }

    def "Test handleJobStartedMsg"() {
        def jobStarted = "cqm 2019-04-03 00:32:17 04/03/2019 00:32:17;S;327220;Resource_List.ncpus=3000 Resource_List.nodect=3000 Resource_List.walltime=1:00:00 account=^P27857609013029^ args= ctime=1554251516.32 cwd=/lus/theta-fs0/projects/^P76243759028727^/^FILEPATHREMOVED^^U73007516364104^/^FILEPATHREMOVED^ etime=1554251516.32 exe=/home/^U73007516364104^/^FILEPATHREMOVED^ exec_host=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" group=^U47439912589006^ jobname=nek mode=script qtime=1554251516.32 queue=R.pm2 session=^U47439912589006^ start=1554251537.81 user=^U73007516364104^"
        def aLineCols = jobStarted.split(" ")
        underTest_.handleJobStartedMsg(aLineCols)
        expect: true
    }

    def "Test handleJobCompletionMsg"() {
        def jobCompleted = "cqm 2019-04-03 00:35:40 04/03/2019 00:35:40;E;327220;Exit_status=0 Resource_List.ncpus=3000 Resource_List.nodect=3000 Resource_List.walltime=1:00:00 account=^P27857609013029^ approx_total_etime=20 args= ctime=1554251516.32 cwd=/lus/theta-fs0/projects/^P76243759028727^/^FILEPATHREMOVED^^U73007516364104^/^FILEPATHREMOVED^ end=1554251740.88 etime=1554251516.32 exe=/home/^U73007516364104^/^FILEPATHREMOVED^ exec_host=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" group=^U47439912589006^ jobname=nek mode=script priority_core_hours=2824063 qtime=1554251516.32 queue=R.pm2 resources_used.location=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" resources_used.nodect=3000 resources_used.walltime=0:03:23 session=^U47439912589006^ start=1554251537.81 user=^U73007516364104^"
        def aLineCols = jobCompleted.split(" ")
        underTest_.handleJobCompletionMsg(aLineCols)
        expect: true
    }

    def "Test handleReservationCreatedMsg"() {
        def reservationCreated = "bgsched 2019-04-07 15:27:54 ^U94332985204799^ adding reservation: [{'name': 'benchmarking', 'block_passthrough': False, 'partitions': '24-47,52-75,84-139,148-286,288-395,404-459,468-523,532-779,788-815,820-843,852-907,916-1161,1163,1172-1227,1236-1291,1300-1521,1523-1547,1556-1611,1620-1675,1684-1935,1940-1995,2004-2059,2068-2319,2324-2351,2356-2379,2388-2443,2452-2703,2708-2763,2772-2827,2836-2983,2985-3087,3092-3119,3124-3147,3156-3211,3220-3547,3549,3560-3590,3594-3597,3612-3614,3619-3633,3640-3650,3652-3659,3662,3664-3665,3668-3689,3692-3694,3696-3699,3701,3710,3720-3764,3766-3779,3781-3782,3784,3787-3792,3794-3796,3798,3800-3814,3816-3823,3842,3846,3849,3860-3862,3864-3893,3895-3919,3930-3942,3944-3959,3961,3970-3971,3973,3976-3991,3993-3996,3998-4009,4014,4020-4053,4055-4056,4059-4064,4066,4068-4070,4076,4080-4090,4106-4140,4150-4181,4183-4191,4196-4199,4201,4210-4212,4214,4216-4223,4226,4229-4244,4246-4260,4262-4272,4276-4277,4280-4288,4290-4299,4302-4303,4306,4308-4327,4329-4335,4338,4340-4349,4351-4363,4366-4368,4370,4372-4376,4379-4400,4404-4406,4408-4409,4413,4416,4418-4419,4421,4424,4426,4428-4436,4438-4442,4445-4449,4454-4458,4460-4475,4477,4479,4487,4491,4495-4496,4498-4549,4551-4567,4569-4573,4576,4578-4579,4584-4607', 'project': ^P54486199121217^, 'start': 1554667200.0, 'duration': 12600, 'cycle': ^P54486199121217^, 'users': '^U92605928607567^:^U94332985204799^:^U76403053512984^:^U46918047287928^'}]"
        def aLineCols = reservationCreated.split(" ")
        underTest_.handleReservationCreatedMsg(aLineCols)
        expect: true
    }

    def "Test handleReservationUpdatedMsg Users"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'users': '^U92605928607567^:^U94332985204799^:^U76403053512984^:^U46918047287928^:^U88988976361690^:^U833649142102^'}"
        def aLineCols = reservationUpdated.split(" ")
        underTest_.handleReservationUpdatedMsg(aLineCols)
        expect: true
    }

    def "Test handleReservationUpdatedMsg Nodes"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'partitions': '24-47'}"
        def aLineCols = reservationUpdated.split(" ")
        underTest_.handleReservationUpdatedMsg(aLineCols)
        expect: true
    }

    def "Test handleReservationUpdatedMsg Start"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'start': '1554667200.0'}"
        def aLineCols = reservationUpdated.split(" ")
        underTest_.handleReservationUpdatedMsg(aLineCols)
        expect: true
    }

    def "Test handleReservationDeletedMsg"() {
        def reservationDeleted = "bgsched 2019-04-07 21:40:35 ^U94332985204799^ releasing reservation: [{'name': 'benchmarking', 'partitions': '*'}]"
        def aLineCols = reservationDeleted.split(" ")
        underTest_.handleReservationDeletedMsg(aLineCols)
        expect: true
    }

    def "Test handleEndOfJobProcessing"() {
        long   startTime  = 1581103966000L;
        long   endTime    = 1581104966000L;
        HashMap<String, Object> jobInfo = new HashMap<String,Object>() {{ put("WlmJobStarted","T"); put("WlmJobCompleted","T"); put("WlmJobWorkDir","/tmp");
            put("WlmJobState","T"); put("WlmJobEndTime", startTime); put("WlmJobStartTime", endTime)}}
        underTest_.handleEndOfJobProcessing("327220", jobInfo, "0")
        expect: true
    }

    def "Test handleEndOfJobProcessing Null"() {
        underTest_.handleEndOfJobProcessing("327220", null, "0")
        expect: true
    }

    def "Test chkAndUpdateWorkingResults"() {
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:49")
        expect: true
    }

    def "Test chkAndUpdateWorkingResults 10 times"() {

        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:40")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:41")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:42")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:43")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:44")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:45")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:46")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:47")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:48")
        underTest_.chkAndUpdateWorkingResults("2019-04-03 00:35:49")
        expect: true
    }

    def "Test shutdown"() {
        underTest_.shutDown()
        expect: true
    }

    def "Test processSinkMessage JobStarted"() {
        def jobStarted = "cqm 2019-04-03 00:32:17 04/03/2019 00:32:17;S;327220;Resource_List.ncpus=3000 Resource_List.nodect=3000 Resource_List.walltime=1:00:00 account=^P27857609013029^ args= ctime=1554251516.32 cwd=/lus/theta-fs0/projects/^P76243759028727^/^FILEPATHREMOVED^^U73007516364104^/^FILEPATHREMOVED^ etime=1554251516.32 exe=/home/^U73007516364104^/^FILEPATHREMOVED^ exec_host=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" group=^U47439912589006^ jobname=nek mode=script qtime=1554251516.32 queue=R.pm2 session=^U47439912589006^ start=1554251537.81 user=^U73007516364104^"
        underTest_.processSinkMessage("subject", jobStarted)
        expect: true
    }

    def "Test processSinkMessage JobCompletion"() {
        def jobCompleted = "cqm 2019-04-03 00:35:40 04/03/2019 00:35:40;E;327220;Exit_status=0 Resource_List.ncpus=3000 Resource_List.nodect=3000 Resource_List.walltime=1:00:00 account=^P27857609013029^ approx_total_etime=20 args= ctime=1554251516.32 cwd=/lus/theta-fs0/projects/^P76243759028727^/^FILEPATHREMOVED^^U73007516364104^/^FILEPATHREMOVED^ end=1554251740.88 etime=1554251516.32 exe=/home/^U73007516364104^/^FILEPATHREMOVED^ exec_host=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" group=^U47439912589006^ jobname=nek mode=script priority_core_hours=2824063 qtime=1554251516.32 queue=R.pm2 resources_used.location=\"0-4,6-7,9-11,20-29,52-75,90-109,148-259,270-279,290-299,310-319,340-349,360-395,404-409,411-417,419-439,451,454-458,480-515,517-523,532-559,600-639,659,662-665,667-671,678-699,740-759,770-779,788-815,820-843,852-893,895,900-907,916-939,960-979,1000-1025,1027-1059,1080-1087,1100-1109,1113-1115,1118-1159,1172-1179,1190-1200,1202-1207,1210-1227,1236-1245,1262,1264-1272,1276-1289,1300-1319,1330-1337,1342-1343,1370-1380,1382-1388,1390-1399,1440-1442,1444,1446-1507,1511,1521,1523-1527,1530,1532,1534-1536,1544-1545,1556-1559,1570-1591,1593,1595-1597,1599-1611,1620-1629,1653,1655,1684-1709,1718-1734,1736-1739,1750-1787,1791,1794-1795,1798,1800-1879,1897,1900-1935,1940-1961,1964-1979,1986-1987,1990,1993-1994,2020-2033,2035-2059,2080-2111,2113-2117,2136-2155,2157,2160-2175,2180-2191,2194-2239,2260-2319,2324,2337,2360-2379,2388-2402,2404-2409,2411-2443,2452-2469,2481,2500-2574,2576-2639,2669,2680-2703,2708-2763,2772-2779,2803,2805,2836,2840-2851,2853,2855-2857,2859-2873,2875-2899,2908,2912,2917-2919,2940-2957,2964-2977,2980-2989,2992-2999,3001-3021,3024-3025,3027-3031,3035,3038-3039,3042,3060-3071,3074-3075,3082-3083,3086-3087,3093-3097,3100-3106,3108,3110-3119,3124-3129,3141,3160-3167,3190-3194,3196,3198-3203,3205-3211,3223-3235,3239-3251,3254,3256-3259,3262,3264-3303,3306-3308,3310-3339,3341-3359,3361,3364,3369,3390-3393,3398,3400-3409,3430-3431,3433-3434,3436-3459,3464-3483,3485-3499,3510-3527,3529-3539,3549,3569,3577,3580-3594,3596-3599,3610-3611,3615-3617,3620,3626-3627,3640-3650,3652-3698,3705,3710,3720-3727,3729-3737,3740-3759,3765,3770-3782,3784-3792,3794-3796,3798,3800-3880,3885,3895,3900,3902-3925,3927-3942,3948-3957,3970,3972-3977,3982-3983,3988-3999,4012,4014,4020-4026,4028-4053,4055-4056,4059,4061-4062,4066,4070,4076,4080-4099,4120-4125,4127-4176,4178-4181,4183-4199,4210-4212,4214,4216-4223,4226,4229-4239,4249-4260,4268-4270,4272,4276-4280,4282-4284,4286-4299,4302-4303,4305-4321,4326-4327,4329-4362,4366-4368,4370-4375,4377-4389,4392,4400-4405,4407-4409,4413,4416,4418-4419,4422,4425,4427-4434,4437-4440,4446-4447,4454-4458,4460-4469,4490-4495,4497-4498,4500-4535,4537-4538,4540-4567,4569,4571-4573,4576,4578-4580,4584-4592,4594-4607\" resources_used.nodect=3000 resources_used.walltime=0:03:23 session=^U47439912589006^ start=1554251537.81 user=^U73007516364104^"
        underTest_.processSinkMessage("subject", jobCompleted)
        expect: true
    }

    def "Test processSinkMessage ReservationCreated"() {
        def reservationCreated = "bgsched 2019-04-07 15:27:54 ^U94332985204799^ adding reservation: [{'name': 'benchmarking', 'block_passthrough': False, 'partitions': '24-47,52-75,84-139,148-286,288-395,404-459,468-523,532-779,788-815,820-843,852-907,916-1161,1163,1172-1227,1236-1291,1300-1521,1523-1547,1556-1611,1620-1675,1684-1935,1940-1995,2004-2059,2068-2319,2324-2351,2356-2379,2388-2443,2452-2703,2708-2763,2772-2827,2836-2983,2985-3087,3092-3119,3124-3147,3156-3211,3220-3547,3549,3560-3590,3594-3597,3612-3614,3619-3633,3640-3650,3652-3659,3662,3664-3665,3668-3689,3692-3694,3696-3699,3701,3710,3720-3764,3766-3779,3781-3782,3784,3787-3792,3794-3796,3798,3800-3814,3816-3823,3842,3846,3849,3860-3862,3864-3893,3895-3919,3930-3942,3944-3959,3961,3970-3971,3973,3976-3991,3993-3996,3998-4009,4014,4020-4053,4055-4056,4059-4064,4066,4068-4070,4076,4080-4090,4106-4140,4150-4181,4183-4191,4196-4199,4201,4210-4212,4214,4216-4223,4226,4229-4244,4246-4260,4262-4272,4276-4277,4280-4288,4290-4299,4302-4303,4306,4308-4327,4329-4335,4338,4340-4349,4351-4363,4366-4368,4370,4372-4376,4379-4400,4404-4406,4408-4409,4413,4416,4418-4419,4421,4424,4426,4428-4436,4438-4442,4445-4449,4454-4458,4460-4475,4477,4479,4487,4491,4495-4496,4498-4549,4551-4567,4569-4573,4576,4578-4579,4584-4607', 'project': ^P54486199121217^, 'start': 1554667200.0, 'duration': 12600, 'cycle': ^P54486199121217^, 'users': '^U92605928607567^:^U94332985204799^:^U76403053512984^:^U46918047287928^'}]"
        underTest_.processSinkMessage("subject", reservationCreated)
        expect: true
    }

    def "Test processSinkMessage ReservationUpdated Users"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'users': '^U92605928607567^:^U94332985204799^:^U76403053512984^:^U46918047287928^:^U88988976361690^:^U833649142102^'}"
        underTest_.processSinkMessage("subject", reservationUpdated)
        expect: true
    }

    def "Test processSinkMessage ReservationUpdated Nodes"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'partitions': '24-47'}"
        underTest_.processSinkMessage("subject", reservationUpdated)
        expect: true
    }

    def "Test processSinkMessage ReservationUpdated Start"() {
        def reservationUpdated = "bgsched 2019-04-07 16:42:30 ^U94332985204799^ modifying reservation: [{'name': 'benchmarking'}] with updates {'start': '1554667200.0'}"
        underTest_.processSinkMessage("subject", reservationUpdated)
        expect: true
    }

    def "Test processSinkMessage ReservationDeleted"() {
        def reservationDeleted = "bgsched 2019-04-07 21:40:35 ^U94332985204799^ releasing reservation: [{'name': 'benchmarking', 'partitions': '*'}]"
        underTest_.processSinkMessage("subject", reservationDeleted)
        expect: true
    }

    def "Test processSinkMessage error"() {
        def error = "error"
        underTest_.processSinkMessage("subject", error)
        expect: true
    }

    def "Test processSinkMessage exception"() {
        underTest_.processSinkMessage("subject", null)
        expect: true
    }


    def "Test handleInputFromExternalComponent"() {
        underTest_.shutDown()

        String[] args = new String[1]
        args[0] = "RabbitMQHost=rabbitmq"

        expect: underTest_.handleInputFromExternalComponent(args) == 0
    }

    def "Test main nullargs"() {

        when: underTest_.main(null)

        then: thrown RuntimeException
    }

    def "Test main 2args"() {

        String[] args = new String[2];

        when: underTest_.main(args)

        then: thrown RuntimeException
    }

}
